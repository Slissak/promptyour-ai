[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "promp-your-ai"
version = "0.1.0"
description = "A Python project with frontend, backend, tests, and evaluations"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Sivan Lissak", email = "sivanlissak@gmail.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    # Web framework and server
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    # Database
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.0", # PostgreSQL adapter
    "aiosqlite>=0.19.0", # SQLite for development
    # Data validation and serialization
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    # AI API clients
    "openai>=1.6.0",
    "anthropic>=0.8.0",
    "httpx>=0.25.0",
    # Utilities
    "python-dotenv>=1.0.0",
    "loguru>=0.7.0",
    "tenacity>=8.2.0", # Retry logic
    "tiktoken>=0.5.0", # Token counting
    "jinja2>=3.1.0", # Template engine for prompts
    "numpy>=1.24.0",
    "pandas>=2.1.0",
    "beautifulsoup4>=4.13.5",
    "aiohttp>=3.12.15",
    "structlog>=25.4.0",
    "watchdog>=6.0.0",
    "asyncpg>=0.30.0",
    "websockets>=15.0.1",
    "rich>=14.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "httpx[testing]>=0.25.0",
    "pre-commit>=3.5.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.scripts]
backend = "backend.main:main"
frontend = "frontend.app:create_app"
evaluate = "evaluations.run_evaluations:run_all_evaluations"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
